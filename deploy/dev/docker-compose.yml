version: "3.6"
services:
  redis:
    image: "redis:6.0.9-alpine"
    restart: always

  mbtileserver:
    image: consbio/mbtileserver:latest
    restart: on-failure:5
    # command: "--tiles-only"
    volumes:
      - ../../tiles:/tilesets

  renderer:
    image: consbio/mbgl-renderer:latest
    restart: on-failure:5
    volumes:
      - ../../tiles:/app/tiles

  api:
    build:
      context: ../..
      dockerfile: docker/api/Dockerfile
    restart: on-failure:5
    depends_on:
      - redis
    env_file:
      - .env
    command:
      [
        "/usr/local/bin/gunicorn",
        "-k",
        "uvicorn.workers.UvicornWorker",
        "--name",
        "uvicorn",
        "-b",
        ":5000",
        "--capture-output",
        "--log-level",
        "DEBUG",
        "api.api:app",
      ]
    volumes:
      - user_upload:/tmp/sa-reports
      - ../../data:/home/app/data # TODO: this can originate from location in staging config
      - ../../api:/home/app/api # main API
      - ../../analysis:/home/app/analysis # needed for analysis utils
      - ../../constants:/home/app/constants # needed for JSON files for blueprint, indicators
    ports:
      - "5000:5000"

  worker:
    build:
      context: ../..
      dockerfile: docker/api/Dockerfile
    restart: on-failure:5
    depends_on:
      - redis
      - renderer
    env_file:
      - .env
    command: ["/usr/local/bin/arq", "api.worker.WorkerSettings"]
    volumes:
      - user_upload:/tmp/sa-reports
      - ../../data:/home/app/data # TODO: this can originate from location in staging config
      - ../../api:/home/app/api # main API
      - ../../analysis:/home/app/analysis # needed for analysis utils
      - ../../constants:/home/app/constants # needed for JSON files for blueprint, indicators
      - ../../examples:/home/app/examples # DEBUG ONLY
      - ../../tests:/home/app/tests # DEBUG ONLY

  caddy:
    image: caddy/caddy:2.2.1-alpine
    depends_on:
      - mbtileserver
      # - api
      # - worker
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_certs:/root/.caddy
      - ../../ui/public:/var/www

volumes:
  caddy_certs:
  user_upload:
